# Builds on all branches & PRs
# Deploys to PyPi on "release".
name: Build, test and publish

on: [push, pull_request]

jobs:
  build_macos:
    runs-on: ${{ matrix.os }}
    name: Mac/Win Wheel
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-10.15 ]
        python-version: [ '3.10' ]
        arch: [ 'x64', 'x86' ]
        exclude:
          - os: macos-10.15
            arch: 'x86'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Note version
        shell: bash
        run: |
          echo "PACKAGE_VERSION=$(python3 -- ./setup.py --version)" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Upgrade pip, install GitPython
        run: |
          python -m pip install --upgrade pip GitPython wheel
      - name: Build Python wheels
        run: |
          python setup.py bdist_wheel
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.arch }}
          path: dist/*.whl
  deploy:
    needs:
      - build_macos
    runs-on: ubuntu-latest
    name: Deploy wheels to PyPI
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload wheels-macos*/*.whl
